# 
# Makefile.Vx is generated by mkNewdev for VMI3123
# execution of this Makefile is from O.<arch> directory
#

APP = CaenScaler
EPICS_BASE = $(EPICS)

# set ANSI to NO if the source is traditional, non-ansi style
ANSI = YES

ifeq ($(shell whichEpicsVer),R313)
include $(EPICS)/config/CONFIG_APP
else
include $(EPICS)/config/CONFIG_EXTENSIONS
endif

ifeq ($(ANSI),NO)
USR_CFLAGS += -fshared-data -fvolatile -mnobitfield -traditional
else
USR_CFLAGS += -ansi
endif

#WTF?
USR_CFLAGS += -DSIMNT=100

ifeq ($(shell whichEpicsVer),R313)
VxDIR=../../vxcmd/R313
USER_DBDFLAGS += -I .. 
USER_DBDFLAGS += -I $(EPICS_BASE)/dbd
else
include Target.include
VxDIR=../../vxcmd
USR_CFLAGS += -I$(EPICS)/base/rec
endif

#ifeq ($(shell whichSNLVer),1.8)
#USR_CFLAGS += -DSEQ18
#else
#USR_CFLAGS += -DSEQ19
#endif
USR_CFLAGS += -DSEQ19

# Uncomment this line and add appropriate compiler options 
# if you want to use compiler flags for State Notation 
# Language (SNL) programs.
#SNCFLAGS +=

USR_CFLAGS += -I$(EPICS)/base/include 
USR_CFLAGS += -I$(EPICS)/include 
USR_CFLAGS += -I../O.hp700
PROD_DIR = ../../prod_dir
LOCATION = $(PROD_DIR)
INSTALL_LOCATION = $(LOCATION)/$(T_A)
#DBDINSTALL_LOCATION = $(LOCATION)/db
#VxINSTALL_LOCATION = $(LOCATION)/vxcmd
#VxFILE = startup.$(APP)*$(T_A)

# List all the servers where the OBJ will be installed
# for operation. (NOT for development area)
SERVER_LIST = op
# SERVER_LIST += chlsite 
# SERVER_LIST += felsite 
# SERVER_LIST += ctfsite 

#----------------------------------------
#  ADD MACRO DEFINITIONS AFTER THIS LINE
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

# C code files in src/ are listed here
# Ex. for prog1.c and prog2.c in src/
# SRCS.c += ../prog1.c
# SRCS.c += ../prog2.c
RECTYPES += scalerRecord.h
SRCS.c += ../devScaler.c
SRCS.c += ../scalerRecord.c
SRCS.c += ../inputRegister.c
SRCS.c += ../tempcode.c

SRCS.st +=  bcm.st halo.st g0rate.st temps.st \
	hcrate.st bpm_proj.st
# bcm_gen.st bcm_feedback.st

TARGETS = $(APP).o

#----------------------------------------
# DO NOT REMOVE OR CHANGE FOLLOWING LINES
#

# set the default rule to build
default: build

include $(EPICS)/config/RULES.Vx
#----------------------------------------
#  ADD RULES AFTER THIS LINE
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# List all the object code files here
# Ex. for prog1.c, prog2.c in src/
OBJS += $(SRCS.c:../%.c=%.o)
OBJS += $(SRCS.st:%.st=%.o)

$(APP).o:    $(OBJS)
	$(LD) -o $@ $(OBJS)

ifeq ($(shell whichEpicsVer),R313)
install::
else
install:
endif
	@if [ -h "$(PROD_DIR)_dvl" ]; then \
	 echo "Install OBJ in development area for devSup application: $(APP) "; \
	 ${MAKE} install_dvl "LOCATION=$(PROD_DIR)_dvl" ; \
	else \
	 echo "Install OBJ for devSup application: $(APP) "; \
         echo "$(SERVER_LIST) $(PROD_DIR)"; \
	 (for SERVER in ${SERVER_LIST}; do \
	 ${MAKE} "install_$${SERVER}" "LOCATION=$(PROD_DIR)_$${SERVER}" ; \
	 done) ; \
	fi

install_%:
ifeq ($(shell whichEpicsVer),R313)
	test -d $(INSTALL_LOCATION) || mkdir $(INSTALL_LOCATION)
	@if [ -n "$(TARGETS)" ]; then \
	    if [ -f $(TARGETS) ]; then \
	    	echo "Installing OBJ files to $(INSTALL_LOCATION)"; \
	    	cp $(TARGETS) $(INSTALL_LOCATION); \
	    else \
		echo "make $(TARGETS) before install."; \
	    fi \
	else \
	    echo "Nothing to be installed."; \
	fi 
else
	@test -d $(INSTALL_LOCATION) || mkdir $(INSTALL_LOCATION)
	@if [ -n "$(TARGETS)" ]; then \
	    if [ -f $(TARGETS) ]; then \
	    	echo "Installing $(TARGETS) to $(INSTALL_LOCATION)"; \
	    	cp $(TARGETS) $(INSTALL_LOCATION); \
	    else \
		echo "make $(TARGETS) before install."; \
	    fi \
	else \
	    echo "Nothing to be installed."; \
	fi 
endif

clean::
	$(RM) *.o

